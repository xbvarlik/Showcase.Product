#!/usr/bin/env tsx
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var bin_exports = {};
__export(bin_exports, {
  default: () => bin_default
});
module.exports = __toCommonJS(bin_exports);
var import_chunk_JZ6FKTWG = require("./chunk-JZ6FKTWG.js");
var import_chunk_GJN3CSXW = require("./chunk-GJN3CSXW.js");
var import_chunk_XVL5RF2T = require("./chunk-XVL5RF2T.js");
var import_chunk_BAVMZZAR = require("./chunk-BAVMZZAR.js");
var import_chunk_SV5GANSI = require("./chunk-SV5GANSI.js");
var import_chunk_ZBOJAYON = require("./chunk-ZBOJAYON.js");
var import_chunk_EXUBPCXZ = require("./chunk-EXUBPCXZ.js");
var import_chunk_GRGGAY6L = require("./chunk-GRGGAY6L.js");
var import_chunk_BAFPAACN = require("./chunk-BAFPAACN.js");
var import_chunk_YUCPBDWV = require("./chunk-YUCPBDWV.js");
var import_chunk_RM5LJIEV = require("./chunk-RM5LJIEV.js");
var import_chunk_35LAJN5S = require("./chunk-35LAJN5S.js");
var import_chunk_7IT2ZO3D = require("./chunk-7IT2ZO3D.js");
var import_chunk_W3ROQKBN = require("./chunk-W3ROQKBN.js");
var import_chunk_QBK5XTJE = require("./chunk-QBK5XTJE.js");
var import_chunk_INC2OACE = require("./chunk-INC2OACE.js");
var import_chunk_GN5BY5N2 = require("./chunk-GN5BY5N2.js");
var import_chunk_76XWADEV = require("./chunk-76XWADEV.js");
var import_chunk_ZLGLVUFD = require("./chunk-ZLGLVUFD.js");
var import_chunk_CK5VLKFM = require("./chunk-CK5VLKFM.js");
var import_chunk_UJWMQPUH = require("./chunk-UJWMQPUH.js");
var import_chunk_LLGEQ76N = require("./chunk-LLGEQ76N.js");
var import_chunk_IFCV5MY4 = require("./chunk-IFCV5MY4.js");
var import_chunk_SGCF5OHF = require("./chunk-SGCF5OHF.js");
var import_chunk_EFPE3Q7J = require("./chunk-EFPE3Q7J.js");
var import_chunk_WOOPRG54 = require("./chunk-WOOPRG54.js");
var import_chunk_6QFE3AWR = require("./chunk-6QFE3AWR.js");
var import_chunk_LKTTJWFT = require("./chunk-LKTTJWFT.js");
var import_chunk_Q3VDYRO2 = require("./chunk-Q3VDYRO2.js");
var import_chunk_VWV2NY26 = require("./chunk-VWV2NY26.js");
var import_chunk_XRTNIFND = require("./chunk-XRTNIFND.js");
var import_chunk_TKAGMA5K = require("./chunk-TKAGMA5K.js");
var import_chunk_WIZM7TFT = require("./chunk-WIZM7TFT.js");
var import_chunk_MWEO3VUS = require("./chunk-MWEO3VUS.js");
var import_chunk_6C7ESGWY = require("./chunk-6C7ESGWY.js");
var import_chunk_J46BJQHT = require("./chunk-J46BJQHT.js");
var import_chunk_XLLUFIQK = require("./chunk-XLLUFIQK.js");
var import_chunk_LVFPGUOH = require("./chunk-LVFPGUOH.js");
var import_chunk_AAATUOV6 = require("./chunk-AAATUOV6.js");
var import_chunk_NJUAN6V2 = require("./chunk-NJUAN6V2.js");
var import_chunk_U374EXYQ = require("./chunk-U374EXYQ.js");
var import_chunk_EYA6AFSF = require("./chunk-EYA6AFSF.js");
var import_chunk_Q7ACZDDT = require("./chunk-Q7ACZDDT.js");
var import_chunk_KEBB7UIB = require("./chunk-KEBB7UIB.js");
var import_chunk_KPUNMK5W = require("./chunk-KPUNMK5W.js");
var import_chunk_6TE2RIPN = require("./chunk-6TE2RIPN.js");
var import_chunk_WWAWV7DQ = require("./chunk-WWAWV7DQ.js");
var import_debug = __toESM(require("@prisma/debug"));
var import_engines_version = require("@prisma/engines-version");
var import_internals = require("@prisma/internals");
var require_bin = (0, import_chunk_WWAWV7DQ.__commonJS)({
  "src/bin.ts"(exports, module) {
    (0, import_chunk_6TE2RIPN.init_colors)();
    (0, import_chunk_JZ6FKTWG.init_CLI)();
    (0, import_chunk_NJUAN6V2.init_DbCommand)();
    (0, import_chunk_ZBOJAYON.init_DbExecute)();
    (0, import_chunk_EXUBPCXZ.init_DbPull)();
    (0, import_chunk_76XWADEV.init_DbPush)();
    (0, import_chunk_ZLGLVUFD.init_DbSeed)();
    (0, import_chunk_CK5VLKFM.init_MigrateCommand)();
    (0, import_chunk_UJWMQPUH.init_MigrateDeploy)();
    (0, import_chunk_LLGEQ76N.init_MigrateDev)();
    (0, import_chunk_Q3VDYRO2.init_MigrateDiff)();
    (0, import_chunk_XVL5RF2T.init_MigrateReset)();
    (0, import_chunk_BAVMZZAR.init_MigrateResolve)();
    (0, import_chunk_SV5GANSI.init_MigrateStatus)();
    (0, import_chunk_GJN3CSXW.init_getDatabaseVersionSafe)();
    process.on("uncaughtException", (e) => {
      console.log(e);
    });
    process.on("unhandledRejection", (e, promise) => {
      console.log(String(e), String(promise));
    });
    process.once("SIGINT", () => {
      process.exit(130);
    });
    var commandArray = process.argv.slice(2);
    var packageJson = eval(`require('../package.json')`);
    async function main() {
      const cli = import_chunk_JZ6FKTWG.CLI.new({
        migrate: import_chunk_CK5VLKFM.MigrateCommand.new({
          dev: import_chunk_LLGEQ76N.MigrateDev.new(),
          status: import_chunk_SV5GANSI.MigrateStatus.new(),
          resolve: import_chunk_BAVMZZAR.MigrateResolve.new(),
          reset: import_chunk_XVL5RF2T.MigrateReset.new(),
          deploy: import_chunk_UJWMQPUH.MigrateDeploy.new(),
          diff: import_chunk_Q3VDYRO2.MigrateDiff.new()
        }),
        db: import_chunk_NJUAN6V2.DbCommand.new({
          execute: import_chunk_ZBOJAYON.DbExecute.new(),
          pull: import_chunk_EXUBPCXZ.DbPull.new(),
          push: import_chunk_76XWADEV.DbPush.new(),
          // drop: DbDrop.new(),
          seed: import_chunk_ZLGLVUFD.DbSeed.new()
        })
      });
      const result = await cli.parse(commandArray);
      if (result instanceof import_internals.HelpError) {
        console.error(result);
        return 1;
      } else if ((0, import_internals.isError)(result)) {
        console.error(result);
        return 1;
      }
      console.log(result);
      return 0;
    }
    main().then((code) => {
      if (code !== 0) {
        process.exit(code);
      }
    }).catch((error) => {
      if (error.rustStack) {
        (0, import_internals.handlePanic)({
          error,
          cliVersion: packageJson.version,
          enginesVersion: import_engines_version.enginesVersion,
          command: commandArray.join(" "),
          getDatabaseVersionSafe: import_chunk_GJN3CSXW.getDatabaseVersionSafe
        }).catch((e) => {
          if (import_debug.default.enabled("migrate")) {
            console.error((0, import_chunk_6TE2RIPN.red)((0, import_chunk_6TE2RIPN.bold)("Error: ")) + e.stack);
          } else {
            console.error((0, import_chunk_6TE2RIPN.red)((0, import_chunk_6TE2RIPN.bold)("Error: ")) + e.message);
          }
        }).finally(() => {
          process.exit(1);
        });
      } else {
        if (import_debug.default.enabled("migrate")) {
          console.error((0, import_chunk_6TE2RIPN.red)((0, import_chunk_6TE2RIPN.bold)("Error: ")) + error.stack);
        } else {
          console.error((0, import_chunk_6TE2RIPN.red)((0, import_chunk_6TE2RIPN.bold)("Error: ")) + error.message);
        }
        process.exit(1);
      }
    });
  }
});
var bin_default = require_bin();
