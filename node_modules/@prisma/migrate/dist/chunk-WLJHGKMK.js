"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_WLJHGKMK_exports = {};
__export(chunk_WLJHGKMK_exports, {
  EarlyAccessFlagError: () => EarlyAccessFlagError,
  ExperimentalFlagError: () => ExperimentalFlagError,
  PreviewFlagError: () => PreviewFlagError
});
module.exports = __toCommonJS(chunk_WLJHGKMK_exports);
var import_chunk_6TE2RIPN = require("./chunk-6TE2RIPN.js");
var import_internals = require("@prisma/internals");
(0, import_chunk_6TE2RIPN.init_colors)();
var ExperimentalFlagError = class extends Error {
  constructor() {
    super(`Please provide the ${(0, import_chunk_6TE2RIPN.green)("--experimental")} flag to use this command.`);
  }
};
(0, import_internals.setClassName)(ExperimentalFlagError, "ExperimentalFlagError");
var PreviewFlagError = class extends Error {
  constructor() {
    super(
      `This feature is currently in Preview. There may be bugs and it's not recommended to use it in production environments.
Please provide the ${(0, import_chunk_6TE2RIPN.green)("--preview-feature")} flag to use this command.`
    );
  }
};
(0, import_internals.setClassName)(PreviewFlagError, "PreviewFlagError");
var EarlyAccessFlagError = class extends Error {
  constructor() {
    super(
      `This feature is currently in Early Access. There may be bugs and it's not recommended to use it in production environments.
Please provide the ${(0, import_chunk_6TE2RIPN.green)("--early-access")} flag to use this command.`
    );
  }
};
(0, import_internals.setClassName)(EarlyAccessFlagError, "EarlyAccessFlagError");
